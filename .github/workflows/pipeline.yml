name: .NET
on:
  push:
    branches: [ "Development" ]
  pull_request:
    branches: [ "Development" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.201
    - name: Restore dependencies
      run: dotnet restore TikTok-Clone-Video-Service
      
    - name: Build
      working-directory: ./TikTok-Clone-Video-Service
      run: dotnet build --configuration Release --no-restore
      
    - name: Run Unit tests
      working-directory: ./TikTok-Clone-Video-Service
      run: dotnet test --no-restore --verbosity normal

  analyze:
    runs-on: windows-latest
    needs: build

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v3
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner

      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"Blodowica_TikTok-Clone-User-Servcie" /o:"blodowica" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
          dotnet build TikTok-Clone-Video-Service/TikTok-Clone-Video-Service.csproj --no-incremental
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"


  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with: 
          dotnet-version: 8.0.201
      
      - name: Restore dependencies
        run: dotnet restore TikTok-Clone-User-Service
      - name: Run Snyk to check for vulnerabilities
        run: |
          # Change directory to your project directory
          cd ././TikTok-Clone-User-Service
          
          # Install Snyk CLI
          npm install -g snyk
          
          # Authenticate with Snyk using token
          snyk auth ${{ secrets.SNYK_TOKEN }}
          
          # Run Snyk to check for vulnerabilities
          snyk test --sarif-file-output=snyk.sarif
        continue-on-error: true # To ensure SARIF upload gets called even if Snyk fails
      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: ./TikTok-Clone-User-Service/snyk.sarif


